<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Hello World</title>
      <link href="/2019/02/07/hello-world/"/>
      <url>/2019/02/07/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>windows 10配置及常用软件安装</title>
      <link href="/2019/02/07/windows-10-pei-zhi-ji-chang-yong-ruan-jian-an-zhuang/"/>
      <url>/2019/02/07/windows-10-pei-zhi-ji-chang-yong-ruan-jian-an-zhuang/</url>
      
        <content type="html"><![CDATA[<meta http-equiv="content-type" content="text/html; charset=UTF-8">  <h1 id="实验报告：win-10系统的重装及配置"><a href="#实验报告：win-10系统的重装及配置" class="headerlink" title="实验报告：win 10系统的重装及配置"></a>实验报告：win 10系统的重装及配置</h1><h2 id="实验时间"><a href="#实验时间" class="headerlink" title="实验时间"></a>实验时间</h2><p>Created Time: 2018-12-18 星期二 18:20:53 [DESKTOP-RHFIMOG]<br>Last Modified: 2019-02-07 星期四 22:53:48 [RAN]</p><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><ul><li>了解重装系统要备份哪些文件</li><li>了解常用软件如何下载、安装、配置</li><li>学会msys2编译支持python的vim</li><li>获得一个优秀的终端</li></ul><h2 id="实验主要内容及过程"><a href="#实验主要内容及过程" class="headerlink" title="实验主要内容及过程"></a>实验主要内容及过程</h2><h3 id="重装前需要备份的文件"><a href="#重装前需要备份的文件" class="headerlink" title="重装前需要备份的文件"></a>重装前需要备份的文件</h3><ul><li>Chrome<ul><li>书签,插件,皮肤,apps等所有个人文件: <code>C:\Users\adang\AppData\Local\Google\Chrome\User Data\</code></li></ul></li><li>Gvim<br><code>注意:</code>可备份<code>C:\Users\adang\AppData\Local\Vim\</code>整个目录<ul><li><code>C:\Users\adang\AppData\Local\Vim\vimfiles\</code></li><li><code>C:\Users\adang\AppData\Local\Vim\_vimrc</code></li></ul></li><li>Total Commander<br>  <code>注意：</code>TC是绿色软件，可以备份  <code>C:\Users\adang\AppData\Local\TotalCMD\</code> 整个文件夹到新系统使用。也可以备份目录下的：<ul><li><code>Language</code> 文件夹</li><li><code>User</code> 文件夹</li><li><code>wcx_ftp.ini</code></li><li><code>Wincmd.ini</code></li><li><code>Wincmd.key</code> 注册信息</li><li><code>usercmd.ini</code> 用户设置文件；不一定有；自己新建的</li></ul></li><li>AutoHotkey<ul><li>整个安装目录：<code>C:\Users\adang\AppData\Local\AutoHotKey_cn\</code></li></ul></li><li>Potplayer<br><code>注意:</code>可备份<code>C:\Users\adang\AppData\Local\PotPlayer\</code>整个目录<ul><li>皮肤目录：<code>C:\Users\adang\AppData\Local\PotPlayer\Skins\</code></li><li>配置信息：<code>C:\Users\adang\AppData\Local\PotPlayer\PotPlayerMini.ini</code>  </li><li>在hosts添加<code>127.0.0.1 get.daum.net</code>禁自动更新  </li></ul></li><li>IDM  <ul><li>不要自动下载网址：<code>C:\Program Files (x86)\Internet Download Manager\defexclist.txt</code>  </li></ul></li><li>VPN Gate Client<ul><li>事个安装目录：<code>C:\Program Files\SoftEther VPN Client\</code></li></ul></li></ul><h3 id="添加用户"><a href="#添加用户" class="headerlink" title="添加用户"></a>添加用户</h3><ul><li>adang</li><li>命令提示符tab补全<ul><li>修改注册表<code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor\CompletionChar</code> 的值为9（十进制）。</li></ul></li></ul><h3 id="安装软件"><a href="#安装软件" class="headerlink" title="安装软件"></a>安装软件</h3><h4 id="Chrome-网页浏览"><a href="#Chrome-网页浏览" class="headerlink" title="Chrome 网页浏览"></a><a href="https://www.google.cn/chrome/thank-you.html?statcb=1&amp;installdataindex=empty" target="_blank" rel="noopener">Chrome</a> <code>网页浏览</code></h4><ul><li>Tips : 关闭自动更新的方法：<ul><li>关闭Chrome</li><li>前往文件夹/Library/Google/GoogleSoftwareUpdate</li><li>删除目录中的GoogleSoftwareUpdate.bundle</li><li>重启Chrome就可以看到无法自动更新的提示了  </li></ul></li><li>Tips : 防止每次都要登陆网站的方法：<ul><li>打开：chrome://settings/content/cookies </li><li>去掉“仅将本地数据保留到您退出浏览器为止”的钩。</li></ul></li></ul><h4 id="Total-Commander-文件管理-飞扬时空"><a href="#Total-Commander-文件管理-飞扬时空" class="headerlink" title="Total Commander 文件管理 飞扬时空"></a><a href="https://yun.baidu.com/s/1cp9zuY#list/path=%2F%E9%A3%9E%E6%89%AC%E6%97%B6%E7%A9%BA%2FTotal%20Commander&amp;parentPath=%2F%E9%A3%9E%E6%89%AC%E6%97%B6%E7%A9%BA" target="_blank" rel="noopener">Total Commander</a> <code>文件管理</code> <code>飞扬时空</code></h4><h5 id="下载插件"><a href="#下载插件" class="headerlink" title="下载插件"></a><a href="http://xbeta.info/tc/plugins.htm" target="_blank" rel="noopener">下载插件</a></h5><ul><li><a href="https://totalcmd.net/plugring/procfs.html" target="_blank" rel="noopener">ProcFS</a> <code>进程查看</code> <code>窗口信息</code>  </li></ul><h5 id="设置："><a href="#设置：" class="headerlink" title="设置："></a>设置：</h5><ul><li>关闭键变最小化：打开wincmd.ini找到<code>[Configuration]</code>，添加<code>MinimizeOnClose=1</code>  </li><li>ctrl+d收藏的文件夹列表位置：windcmd.ini中的<code>dirmenu</code>字段  </li></ul><h4 id="AutoHotkey-快捷键"><a href="#AutoHotkey-快捷键" class="headerlink" title="AutoHotkey 快捷键"></a><a href="https://www.autohotkey.com/download/ahk.zip" target="_blank" rel="noopener">AutoHotkey</a> <code>快捷键</code></h4><ul><li>把下载的压缩包解压到：<code>C:\Users\adang\AppData\Local\AutoHotKey_cn\</code></li><li>可能要修改ADR脚本中的计算机名才能生效</li></ul><h4 id="IDM-下载"><a href="#IDM-下载" class="headerlink" title="IDM 下载"></a><a href="">IDM</a> <code>下载</code></h4><ul><li>如无必要，不要随便更新版本，此软件较难激活  </li><li>IDM的chrome插件要手动开启  </li></ul><h4 id="Gvim-编辑器"><a href="#Gvim-编辑器" class="headerlink" title="Gvim 编辑器"></a><a href="https://github.com/vim/vim-win32-installer/releases" target="_blank" rel="noopener">Gvim</a> <code>编辑器</code></h4><ul><li><a href="https://tuxproject.de/projects/vim/" target="_blank" rel="noopener">另一个下载地址</a>，但这个版本微软报毒！——<a href="https://stackoverflow.com/questions/23691408/install-gvim-on-windows-with-python3-support" target="_blank" rel="noopener">来源</a></li><li><code>注意1：</code>gvim的版本要与python相适用！</li><li><code>注意2：</code>安装autohotkey后，可能常用ADR的快捷键启动gVim，需要修改脚本中指定环境变量的代码，在这一行 <code>;先指定git、python的环境变量，避免出错</code> 下面。  </li></ul><h4 id="Python-编程"><a href="#Python-编程" class="headerlink" title="Python 编程"></a><a href="https://www.python.org/downloads/windows/" target="_blank" rel="noopener">Python</a> <code>编程</code></h4><h5 id="安装3-x和2-x，解决pip2和pip3冲突"><a href="#安装3-x和2-x，解决pip2和pip3冲突" class="headerlink" title="安装3.x和2.x，解决pip2和pip3冲突"></a>安装3.x和2.x，解决pip2和pip3冲突</h5><ul><li>修改python2安装目录下的python.exe、pythonw.exe为python2.exe，pythonw2.exe；修改<br>  python3安装目录下的python.exe、pythonw.exe为python3.exe、pythonw3.exe</li><li>重新安装针对python2的pip <code>python2 -m pip install --upgrade pip --force-reinstall</code><br>  这一步与下一步可能有一步会出错，出错 <code>python “No module named pip”</code> 参照下面进行手动安装</li><li>重新安装针对python3的pip <code>python3 -m pip install --upgrade pip --force-reinstall</code>  </li><li>手动安装pip（这里针对python3）<ul><li><code>python3 -m ensurepip</code>  </li><li>重新安装针对python3的pip <code>python3 -m pip install --upgrade pip --force-reinstall</code>  </li><li>现在可以通 <code>过pip2 -V</code> 和 <code>pip3-V</code> 查看两个版本的pip信息，以后只需运 <code>行pip2 install XXX</code>和<code>pip3 install XXX</code>即可安装各自的python包。  </li></ul></li><li><p>日常使用中的一些错误  </p><ul><li>error: Microsoft Visual C++ 9.0 is required. Get it from <a href="http://aka.ms/vcpython27" target="_blank" rel="noopener">http://aka.ms/vcpython27</a><br><a href="https://www.microsoft.com/en-us/download/details.aspx?id=44266" target="_blank" rel="noopener">下载</a>并安装。  </li><li><p>pip3 install turtle </p><ul><li><p>错误提示“Command “python setup.py egg_info” failed with error code 1”<a href="https://oomake.com/question/178949" target="_blank" rel="noopener">参考</a>  </p><pre><code>Collecting turtle  Using cached https://files.pythonhosted.org/packages/ff/f0/21a42e9e424d24bdd0e509d5ed3c7dfb8f47d962d9c044dba903b0b4a26f/turtle-0.0.2.tar.gz    Complete output from command python setup.py egg_info:    Traceback (most recent call last):      File &quot;&lt;string&gt;&quot;, line 1, in &lt;module&gt;      File &quot;/tmp/pip-install-hpqxw6_s/turtle/setup.py&quot;, line 40        except ValueError, ve:                         ^    SyntaxError: invalid syntax        ----------------------------------------    Command &quot;python setup.py egg_info&quot; failed with error code 1 in /tmp/pip-install-hpqxw6_s/turtle/  </code></pre><ul><li>把turtle包下载到本地，手动解压，修改setup.py文件。第40行改为：<code>except (ValueError, ve):</code> 。原来是python2的写法，没有括号。</li><li>再用pip3安装：<code>pip install -e turtle-0.0.2</code>。turtle-0.0.2是之前修改过setup.py文件的目录。</li></ul></li><li>错误提示“error: Microsoft Visual C++ 14.0 is required.”<a href="https://segmentfault.com/a/1190000014782698" target="_blank" rel="noopener">参考</a><ul><li>通过<a href="http://www.lfd.uci.edu/~gohlke/pythonlibs/#twisted" target="_blank" rel="noopener">Unofficial Windows Binaries for Python Extension Packages</a>下载twisted对应版本的whl文件。我下载的是：Twisted-18.9.0-cp37-cp37m-win32.whl  </li><li>运行命令：<code>pip install Download\Twisted-18.9.0-cp37-cp37m-win32.whl</code></li><li>安装完成后，再次运行: <code>pip3 install turtle</code> </li></ul></li></ul></li></ul></li></ul><h5 id="安装一些支持vim的库"><a href="#安装一些支持vim的库" class="headerlink" title="安装一些支持vim的库"></a>安装一些支持vim的库</h5><ul><li>pip install pylint </li><li>pip install flake8 </li><li>pip install autopep8 </li><li>pip install rstcheck </li><li>pip install jedi  </li></ul><h4 id="msys2-中科大下载-Linux-Arch"><a href="#msys2-中科大下载-Linux-Arch" class="headerlink" title="msys2 中科大下载 Linux Arch"></a><a href="https://sourceforge.net/projects/msys2/" target="_blank" rel="noopener">msys2</a> <a href="http://mirrors.ustc.edu.cn/msys2/distrib/x86_64/" target="_blank" rel="noopener">中科大下载</a> <code>Linux</code> <code>Arch</code></h4><h5 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h5><pre><code>* 安装方便  * 自带pacman管理，可以使用pkgtool来makepkg  * 较快的源速度（可以修改源地址）  * 自带软件和库较全而且比较新  * 使用mingw-w64工具链，可以编译32位或64位代码（需要自行安装）  * 中文支持好，可以直接输入和浏览中文目录  </code></pre><h5 id="添加中科大的源"><a href="#添加中科大的源" class="headerlink" title="添加中科大的源"></a><a href="https://blog.csdn.net/liyuanbhu/article/details/56496501" target="_blank" rel="noopener">添加中科大的源</a></h5><p>修改c:\msys64\etc\pacman.d 目录下有三个文件:</p><ul><li>mirrorlist.msys 添加（<code>### msys2.org</code>这一行下面）：<br>  Server = <a href="http://mirrors.ustc.edu.cn/msys2/msys/$arch/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/msys2/msys/$arch/</a>  </li><li>mirrorlist.mingw64 添加：<br>  Server = <a href="http://mirrors.ustc.edu.cn/msys2/mingw/x86_64/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/msys2/mingw/x86_64/</a>  </li><li>mirrorlist.mingw32 添加：<br>  Server = <a href="http://mirrors.ustc.edu.cn/msys2/mingw/i686/" target="_blank" rel="noopener">http://mirrors.ustc.edu.cn/msys2/mingw/i686/</a> </li></ul><h5 id="修改语言为中文"><a href="#修改语言为中文" class="headerlink" title="修改语言为中文"></a>修改语言为中文</h5><ul><li>右键菜单里选择 Option→把 Windows 选项中的 UI language 改为 zh_CN，点击 Save  </li><li>外观→主题flat-ui; 透明度：中; 光标：方块  </li><li>文本→字体：Yahei Consolas Hybrid, 12pt  </li><li>文本→本地locale：zh_CN,UTF-8。重启。解决git 乱码的问题；但是这样使用cmd自带的命令如“ping”就会无法显示中文 <a href="https://blog.csdn.net/phight/article/details/71123027" target="_blank" rel="noopener">详见</a>。</li><li>窗口→默认大小：88*24<br>修改字体大小  </li><li>右键菜单里选择 选项→把 文本 选项中的 字体 选择 改为 小四 点击 保存  </li></ul><h5 id="更改home目录和windows一致"><a href="#更改home目录和windows一致" class="headerlink" title="更改home目录和windows一致"></a><a href="https://www.jianshu.com/p/0e24ee498f2b" target="_blank" rel="noopener">更改home目录和windows一致</a></h5><ul><li>建立文件夹<code>C:\Users\adang\Documents\msys2_home\</code></li><li>打开msys2，运行下面命令把文件复制到msys2_home<br><code>cp -r ~/* /c/Users/adang/Documents/msys2_home/</code>  </li><li>修改~的路径为 <code>C:\Users\adang\Documents\msys2_home</code> ，两种方法，方法一更好用，不会影响到windows系统<ul><li>方法一：编辑 <code>C:\msys64\etc\profile</code>，添加<code>HOME=&quot;/c/Users/adang/Documents/msys2_home/&quot;</code></li><li>方法二：                                                                打开系统属性、高级、环境变量“HOME”(注意大写)用户变量的值为<code>%USERPROFILE%\Documents\msys2_home\</code>。</li></ul></li></ul><h5 id="使用msys2环境变量继承自系统"><a href="#使用msys2环境变量继承自系统" class="headerlink" title="使用msys2环境变量继承自系统"></a>使用msys2环境变量继承自系统</h5><ul><li>找到msys2_shell.com（有的说是msys2.ini）中的<code>rem set MSYS2_PATH_TYPE=inherit</code>，去掉rem  </li><li>没搞清楚是如何使用，而且不推荐这么做  </li></ul><h5 id="添加右键菜单"><a href="#添加右键菜单" class="headerlink" title="添加右键菜单"></a><a href="https://blog.csdn.net/jamsan_n/article/details/82053826" target="_blank" rel="noopener">添加右键菜单</a></h5><ul><li>打开regedit; 找到HKEY_CLASSES_ROOT(这个项下面有很多项，请请耐心找到下面 的 Directory) -&gt; Background-&gt;shell<ul><li>新建项 msys2; 修改默认值为 “ msys2 here”</li><li>msys2项下新建 command项 和 Icon(reg_sz)值 ; Icon值设置为 msys2安装目录+msys2.ico;</li><li>将command的默认项值改为 <code>C:\msys64\msys2_shell.cmd -where %v</code> </li></ul></li></ul><h5 id="要将常用工作目录映射到-MSYS2-的-下"><a href="#要将常用工作目录映射到-MSYS2-的-下" class="headerlink" title="要将常用工作目录映射到 MSYS2 的 ~ 下"></a><a href="https://blog.csdn.net/longfeey/article/details/52014608" target="_blank" rel="noopener">要将常用工作目录映射到 MSYS2 的 ~ 下</a></h5><ul><li>在<code>.bash_profile</code> 中加入 <code>mount -fo binary,noacl,posix=0,user D:/docs ~/docs</code></li></ul><h5 id="基本命令"><a href="#基本命令" class="headerlink" title="基本命令"></a><a href="https://wiki.archlinux.org/index.php/Pacman" target="_blank" rel="noopener">基本命令</a></h5><ul><li>pacman -Sy <code>更新软件包数据库</code>  </li><li>pacman -Syu <code>对整个系统进行更新</code>  </li><li>pacman -S git <code>安装git</code> <code>中文不乱码</code>  <ul><li>git config –global user.name “adangran” <code>设置用户名</code></li><li>git config –global user.email “<a href="mailto:adangran@live.com" target="_blank" rel="noopener">adangran@live.com</a>“ <code>设置邮箱</code></li><li>git config –global core.quotepath false <code>git add 添加文件时中文乱码</code> <a href="https://blog.zengrong.net/post/1249.html" target="_blank" rel="noopener">来源</a></li><li>git config  –global core.editor vim  <code>设置默认编辑器</code></li><li><a href="https://zhuanlan.zhihu.com/p/33789023" target="_blank" rel="noopener">显示 Git 分支名称</a><ul><li>打开 ~/.bashrc ，在结尾添加链接中的内容</li><li>source ~/.bashrc <code>重新载入配置</code></li></ul></li></ul></li><li>pacman -Sl | grep gcc <code>查询可用的gcc包</code> </li><li>pacman -Ss python <code>查询软件包</code> </li><li>pacman -Qi vim <code>查询本地安装软件包</code></li><li>pacman -R 包名 <code>删除包</code></li><li>pacman -Rd 包名 <code>删除包时不检查依赖</code></li><li>pacman -Sc <code>清除软件包缓存 /var/cache/pacman/pkg/</code> </li><li>pacman -Scc <code>清理所有的缓存文件</code></li></ul><h5 id="解决运行命令行自带命令输出乱码的问题"><a href="#解决运行命令行自带命令输出乱码的问题" class="headerlink" title="解决运行命令行自带命令输出乱码的问题"></a>解决运行命令行自带命令输出乱码的问题</h5><p>问题的产生原因：msys2的编码被设置成 UTF-8 而windows命令行的输出是gbk 编码   </p><ul><li><p>新建/usr/bin/win文件：  </p><pre><code>  #!/bin/bash    $@ |iconv -f gbk -t utf-8  </code></pre></li><li><p>在~/.bashrc中添加：  </p><pre><code>  alias ping=&quot;/usr/bin/win ping&quot;    alias netstat=&quot;/usr/bin/win netstat&quot;    alias nslookup=&quot;/usr/bin/win nslookup&quot;    alias ipconfig=&quot;/usr/bin/win ipconfig&quot;  </code></pre></li></ul><h5 id="手动编译vim"><a href="#手动编译vim" class="headerlink" title="手动编译vim"></a><a href="https://www.jianshu.com/p/91d5448891f6" target="_blank" rel="noopener">手动编译vim</a></h5><p>安装git会顺带安装vim，但是这个vim不支持python，下面是手动编译的方法</p><ul><li>pacman -S pacman -S –noconfirm mingw-w64-x86_64-python3 mingw-w64-x86_64-python3-setuptools mingw-w64-x86_64-python3-pip mingw-w64-x86_64-python3-ipython <code>安装python</code>  </li><li>pacman -S pacman -S –noconfirm mingw-w64-x86_64-python2 mingw-w64-x86_64-python2-setuptools mingw-w64-x86_64-python2-pip mingw-w64-x86_64-python2-ipython <code>安装python2</code>  </li><li>pacman -S ncurses-devel</li><li>pacman -S gcc base-devel <code>安装基本编译环境</code>  </li><li>pacman -S libcrypt-devel  </li><li>pacman -Rdd vim <code>删除vim</code>  </li><li><del>编译安装lua，因为没有lua包。</del>  <code>lua好像有包，不需要像这样编译</code>  <ul><li>curl -R -O <a href="http://www.lua.org/ftp/lua-5.3.2.tar.gz" target="_blank" rel="noopener">http://www.lua.org/ftp/lua-5.3.2.tar.gz</a></li><li>tar zxf lua-5.3.2.tar.gz</li><li>cd lua-5.3.2/src</li><li>make mingw &amp;&amp; cd .. &amp;&amp; make install</li></ul></li><li>编译安装vim  <ul><li>git clone <a href="https://github.com/vim/vim" target="_blank" rel="noopener">https://github.com/vim/vim</a></li><li>cd vim/src</li><li>./configure –prefix=/usr –with-tlib=ncursesw –enable-luainterp –with-lua-prefix=/usr/local –disable-gui –disable-tclinterp –enable-cscope –without-x CPPFLAGS=”${CPPFLAGS} -I/usr/include/ncursesw” –enable-python3interp=dynamic –enable-rubyinterp=dynamic –enable-pythoninterp=dynamic –enable-multibyte &amp;&amp; make</li><li>cd .. &amp;&amp; make install</li></ul></li></ul><h5 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h5><ul><li>建立别名：修改.bashrc，添加  <pre><code>  alias lsl=&#39;ls -al&#39;    alias vimu=&#39;vim -u NONE&#39;    alias vimi=&#39;vim -n -u NONE -i NONE -N&#39;    alias cp=&#39;cp -i&#39;¬    alias l.=&#39;ls -d .* --color=auto&#39;¬    alias ll=&#39;ls -l --color=auto&#39;¬    alias ls=&#39;ls --color=auto&#39;¬    alias mv=&#39;mv -i&#39;  </code></pre></li></ul><h5 id="其它"><a href="#其它" class="headerlink" title="其它"></a>其它</h5><ul><li><a href="https://www.cnblogs.com/piepie/p/8474263.html" target="_blank" rel="noopener">Conemu, Msys2 工具整合，提升windows下控制台工作效率</a></li><li><a href="http://dantvt.is-programmer.com/posts/63161.html" target="_blank" rel="noopener">MSYS2 + MinGW-w64 + Git + gVim 环境配置</a> <code>讲得比较细</code></li><li><a href="https://zhuanlan.zhihu.com/p/33751738" target="_blank" rel="noopener">如何优雅地配置 Windows 环境下的 MSys2 + Git 开发环境？（上）</a> <code>Github</code>  </li><li><a href="https://www.jianshu.com/p/c740b71e7775" target="_blank" rel="noopener">msys2配置记录</a> <code>美化</code> <code>conemu</code></li></ul><h5 id="安装其它软件"><a href="#安装其它软件" class="headerlink" title="安装其它软件"></a>安装其它软件</h5><ul><li><strong>convmv</strong> 一个对中文文件名进行转码的工具<ul><li><a href="https://www.j3e.de/linux/convmv/" target="_blank" rel="noopener">下载</a></li><li>解压到把convmv文件拷贝到 /usr/bin/ 目录下</li><li>使用：<ul><li><code>convmv -f GBK -t UTF-8 文件.txt</code> 测试把“文件.txt”转换成UTF-8编码</li><li><code>convmv -f GBK -t UTF-8 文件.txt --notest</code> 把“文件.txt”转换成UTF-8编码</li></ul></li></ul></li></ul><h4 id="gitforwindows"><a href="#gitforwindows" class="headerlink" title="gitforwindows"></a><a href="https://gitforwindows.org/" target="_blank" rel="noopener">gitforwindows</a></h4><p>安装msys2最主要的目的是要有一个好的git软件，但实际使用中，发现有很多问题，所以还是决定使用gitforwindows。  </p><ul><li><a href="https://blog.csdn.net/qq_32786873/article/details/80570783" target="_blank" rel="noopener">安装参考</a></li><li>安装完成后把.ssh文件夹和.gitconfig文件复制到：c:/User/用户名/目录下。  <ul><li>git config –list     # 查看配置信息</li></ul></li></ul><h4 id="Bandizip-for-Windows-压缩"><a href="#Bandizip-for-Windows-压缩" class="headerlink" title="Bandizip for Windows 压缩"></a><a href="http://www.bandisoft.com/bandizip/dl.php?web" target="_blank" rel="noopener">Bandizip for Windows</a> <code>压缩</code></h4><ul><li>功能全面强大，界面美观。比7zip好的地方在于支持向压缩包添加文件。  </li></ul><h4 id="Honeyview-图片浏览"><a href="#Honeyview-图片浏览" class="headerlink" title="Honeyview 图片浏览"></a><a href="http://www.bandisoft.com/honeyview/dl.php?web" target="_blank" rel="noopener">Honeyview</a> <code>图片浏览</code></h4><h4 id="Potplayer-视频播放"><a href="#Potplayer-视频播放" class="headerlink" title="Potplayer 视频播放"></a><a href="https://zdfans.ctfile.com/dir/16343-26292654-ce5c84" target="_blank" rel="noopener">Potplayer</a> <code>视频播放</code></h4><ul><li>优点<ul><li>支持单帧播放（F前进一帧，D倒退一帧，空格正常播放）</li><li>支持变速播放（X降速10%，C提速10%，Z重置）</li><li>支持多声道音频</li><li>支持声画同步调节（&lt;提前50ms，&gt;延后50ms，？重置）</li><li>按TAB就能显示文件的详细信息</li><li>支持硬解码、软解码</li><li>支持画面宽高比自定义</li><li>支持隔行转逐行</li><li>音量可放大到500%</li><li>支持Level Control</li></ul></li><li>设置<ul><li>自动隐藏按钮：左上角Potplayer→皮肤→视频下自动隐藏</li><li>F5→基本→消息→在屏幕上显示播放信息→确定  </li><li>F5→播放→播放设置勾选“仅在播放视频时调整一次尺寸”。这样播放时窗口不会忽大忽小。  </li><li>F5→播放→宽高比→勾选“缩放窗口时保持宽高比”。这样调整窗口时不会出现黑边。  </li></ul></li></ul><h4 id="坚果云-网盘-同步"><a href="#坚果云-网盘-同步" class="headerlink" title="坚果云 网盘 同步"></a><a href="https://www.jianguoyun.com/static/exe/installer/NutstoreWindowsInstaller.exe" target="_blank" rel="noopener">坚果云</a> <code>网盘</code> <code>同步</code></h4><ul><li>同步文件夹位置：<code>C:\Users\adang\Documents\nutstore</code></li></ul><h4 id="WorkFlowy-幕布"><a href="#WorkFlowy-幕布" class="headerlink" title="WorkFlowy 幕布"></a><a href="https://github.com/workflowy/desktop/releases/download/v1.1.10/WorkFlowy-Installer.exe" target="_blank" rel="noopener">WorkFlowy</a> <code>幕布</code></h4><h4 id="TIM-聊天"><a href="#TIM-聊天" class="headerlink" title="TIM 聊天"></a><a href="https://qd.myapp.com/myapp/qqteam/tim/down/tim_pc.exe" target="_blank" rel="noopener">TIM</a> <code>聊天</code></h4><h4 id="Xmind-思维导图"><a href="#Xmind-思维导图" class="headerlink" title="Xmind 思维导图"></a><a href="">Xmind</a> <code>思维导图</code></h4><ul><li>在C:\windows\system32\drivers\etc\hosts添加:<br> <code>127.0.0.1 www.xmind.net</code><br> <code>127.0.0.1 xmind.net</code>  </li></ul><h4 id="VPN-Gate-Client"><a href="#VPN-Gate-Client" class="headerlink" title="VPN Gate Client"></a><a href="https://www.vpngate.net/cn/download.aspx" target="_blank" rel="noopener">VPN Gate Client</a></h4><ul><li>安装：“SoftEther VPN Client”下一步→钩选我同意，下一步→下一步→下一步</li></ul><h4 id="蓝灯"><a href="#蓝灯" class="headerlink" title="蓝灯"></a><a href="">蓝灯</a></h4><h3 id="系统备份"><a href="#系统备份" class="headerlink" title="系统备份"></a>系统备份</h3><ul><li>控制面板→系统和安全→备份和还原(windows 7)→更改设置→立即备份  </li></ul><h3 id="未安装软件"><a href="#未安装软件" class="headerlink" title="未安装软件"></a>未安装软件</h3><ul><li>snipaste可以把资料贴到桌面</li><li>天诺ocr</li><li>inpaint 图片去水印</li><li><a href="https://www.microsoft.com/zh-cn/p/bibliovore/9wzdncrdd0x7?ocid=MSCOMWin10TopPaidApps&amp;activetab=pivot%3Aoverviewtab" target="_blank" rel="noopener">bibiovore</a>电子书阅读器</li></ul><h2 id="实验总结"><a href="#实验总结" class="headerlink" title="实验总结"></a>实验总结</h2><p>通过实验建立一个干净高效的系统，实际使用中msys2的效果没预期理想。</p>]]></content>
      
      
      <categories>
          
          <category> 实验报告 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> windows 10 </tag>
            
            <tag> msys2 </tag>
            
            <tag> python </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>测试文章</title>
      <link href="/2019/02/07/ce-shi-wen-zhang/"/>
      <url>/2019/02/07/ce-shi-wen-zhang/</url>
      
        <content type="html"><![CDATA[<h1 id="测试文章"><a href="#测试文章" class="headerlink" title="测试文章"></a>测试文章</h1><h2 id="标题二"><a href="#标题二" class="headerlink" title="标题二"></a>标题二</h2><p>内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</p><h3 id="标题三"><a href="#标题三" class="headerlink" title="标题三"></a>标题三</h3><p>内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</p><h4 id="标题四"><a href="#标题四" class="headerlink" title="标题四"></a>标题四</h4><p>内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容内容</p>]]></content>
      
      
      <categories>
          
          <category> Markdown </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 未归类 </tag>
            
            <tag> Blog </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
